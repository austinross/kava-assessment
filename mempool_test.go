package main

import (
	"container/heap"
	"reflect"
	"testing"
)

var mp *Mempool = &Mempool{
	&Transaction{
		hash:      "F4F6580BB142004E80EC3198B4EDBE48DA83299E12A9F7E3E65AC5AC217D7B6F",
		gas:       748000,
		feePerGas: 0.000096,
		signature: "EE95A1DA2BFC62FC2D885DA58B51866BE6EBB846AD8D0915A1DBB8B44BB1A63200ECAD70E2261936856F5CFB096D5B4FF7DF07097FA717DD5E7F7520F51E06AE",
	},
	&Transaction{
		hash:      "DC47D1A6BF36202FC54BF25D86B4D232599B047E9E03ABFBA1F3DED5BB55BFBF",
		gas:       540000,
		feePerGas: 0.876115,
		signature: "4E2052F4BEDDE9A36C3F576BCE42851A6B60D278BA25F0BF2FB7BB00327D3CEA1F64E9EED28DDA4E30B2F0B2EC2E6086DBC999D4AFC551FC843A00FC550997D8",
	},
	&Transaction{
		hash:      "C39C4CA2A77B721CFBEAFF1A3613A4F960965C4CC1E1A8B2D136E2B603F094F4",
		gas:       709000,
		feePerGas: 0.884245,
		signature: "7585E48755D5683E0A8F3A64DE14FFE80B2778EC5D4CBA8CFC0847AB81929D4153722C289880048DC3142E71884FE0037C78D3A2F9CD53B283F5D0E92A8666E6",
	},
}

var newTransaction Transaction = Transaction{
	hash:      "5ECFB62E8D1BAE46FD8CB5B0436EF7912464509C32F80DBAF35FAB524E3379A9",
	gas:       815000,
	feePerGas: 0.572887,
	signature: "E3E4B226CCFB646C9970FE7E719211DD799642086E963F28F4985D73EE287CF451E36348687BE1F8FD888200C64E1C009180217F7AFD61D16AD6FF87BF56E9E3",
}

func cleanUp() {
	mp = &Mempool{
		&Transaction{
			hash:      "F4F6580BB142004E80EC3198B4EDBE48DA83299E12A9F7E3E65AC5AC217D7B6F",
			gas:       748000,
			feePerGas: 0.000096,
			signature: "EE95A1DA2BFC62FC2D885DA58B51866BE6EBB846AD8D0915A1DBB8B44BB1A63200ECAD70E2261936856F5CFB096D5B4FF7DF07097FA717DD5E7F7520F51E06AE",
		},
		&Transaction{
			hash:      "DC47D1A6BF36202FC54BF25D86B4D232599B047E9E03ABFBA1F3DED5BB55BFBF",
			gas:       540000,
			feePerGas: 0.876115,
			signature: "4E2052F4BEDDE9A36C3F576BCE42851A6B60D278BA25F0BF2FB7BB00327D3CEA1F64E9EED28DDA4E30B2F0B2EC2E6086DBC999D4AFC551FC843A00FC550997D8",
		},
		&Transaction{
			hash:      "C39C4CA2A77B721CFBEAFF1A3613A4F960965C4CC1E1A8B2D136E2B603F094F4",
			gas:       709000,
			feePerGas: 0.884245,
			signature: "7585E48755D5683E0A8F3A64DE14FFE80B2778EC5D4CBA8CFC0847AB81929D4153722C289880048DC3142E71884FE0037C78D3A2F9CD53B283F5D0E92A8666E6",
		},
	}
}

func TestLen(t *testing.T) {
	len := mp.Len()
	if len != 3 {
		t.Errorf("mempool.Len() expected: 3, result: %d", len)
	}
}

func TestLess(t *testing.T) {
	result := mp.Less(0, 2)
	if !result {
		t.Errorf("mempool.Less() expected: false, result: %v", result)
	}
}

func TestSwap(t *testing.T) {
	oldI, oldJ := (*mp)[0], (*mp)[2]
	mp.Swap(0, 2)
	if (*mp)[0] == oldI || (*mp)[2] == oldJ {
		t.Errorf("mempool.Swap() failed, result: %+v, %+v\n", (*mp)[0], (*mp)[2])
	}
	cleanUp()
}

func TestPop(t *testing.T) {
	heap.Init(mp)
	transaction := heap.Pop(mp)
	expected := &Transaction{
		hash:      "F4F6580BB142004E80EC3198B4EDBE48DA83299E12A9F7E3E65AC5AC217D7B6F",
		gas:       748000,
		feePerGas: 0.000096,
		signature: "EE95A1DA2BFC62FC2D885DA58B51866BE6EBB846AD8D0915A1DBB8B44BB1A63200ECAD70E2261936856F5CFB096D5B4FF7DF07097FA717DD5E7F7520F51E06AE",
	}

	if !reflect.DeepEqual(transaction, expected) {
		t.Errorf("mempool.Pop() expected: %+v\n result: %+v\n", expected, transaction)
	}
	cleanUp()
}

func TestPush(t *testing.T) {
	heap.Init(mp)
	heap.Push(mp, newTransaction)

	expectedMp := &Mempool{
		&Transaction{
			hash:      "F4F6580BB142004E80EC3198B4EDBE48DA83299E12A9F7E3E65AC5AC217D7B6F",
			gas:       748000,
			feePerGas: 0.000096,
			signature: "EE95A1DA2BFC62FC2D885DA58B51866BE6EBB846AD8D0915A1DBB8B44BB1A63200ECAD70E2261936856F5CFB096D5B4FF7DF07097FA717DD5E7F7520F51E06AE",
		},
		&Transaction{
			hash:      "DC47D1A6BF36202FC54BF25D86B4D232599B047E9E03ABFBA1F3DED5BB55BFBF",
			gas:       540000,
			feePerGas: 0.876115,
			signature: "4E2052F4BEDDE9A36C3F576BCE42851A6B60D278BA25F0BF2FB7BB00327D3CEA1F64E9EED28DDA4E30B2F0B2EC2E6086DBC999D4AFC551FC843A00FC550997D8",
		},
		&Transaction{
			hash:      "5ECFB62E8D1BAE46FD8CB5B0436EF7912464509C32F80DBAF35FAB524E3379A9",
			gas:       815000,
			feePerGas: 0.572887,
			signature: "E3E4B226CCFB646C9970FE7E719211DD799642086E963F28F4985D73EE287CF451E36348687BE1F8FD888200C64E1C009180217F7AFD61D16AD6FF87BF56E9E3",
		},
		&Transaction{
			hash:      "C39C4CA2A77B721CFBEAFF1A3613A4F960965C4CC1E1A8B2D136E2B603F094F4",
			gas:       709000,
			feePerGas: 0.884245,
			signature: "7585E48755D5683E0A8F3A64DE14FFE80B2778EC5D4CBA8CFC0847AB81929D4153722C289880048DC3142E71884FE0037C78D3A2F9CD53B283F5D0E92A8666E6",
		},
	}
	heap.Init(expectedMp)

	for range *expectedMp {
		result := heap.Pop(mp)
		expected := heap.Pop(expectedMp)
		if !reflect.DeepEqual(result, expected) {
			t.Errorf("mempool.Push() expected: %+v\n result: %+v\n", expected, result)
			break
		}
	}
	cleanUp()
}

func TestToStrings(t *testing.T) {
	strings := mp.ToStrings()
	expected := []string{
		"TxHash=F4F6580BB142004E80EC3198B4EDBE48DA83299E12A9F7E3E65AC5AC217D7B6F Gas=748000 FeePerGas=0.000096 Signature=EE95A1DA2BFC62FC2D885DA58B51866BE6EBB846AD8D0915A1DBB8B44BB1A63200ECAD70E2261936856F5CFB096D5B4FF7DF07097FA717DD5E7F7520F51E06AE",
		"TxHash=DC47D1A6BF36202FC54BF25D86B4D232599B047E9E03ABFBA1F3DED5BB55BFBF Gas=540000 FeePerGas=0.876115 Signature=4E2052F4BEDDE9A36C3F576BCE42851A6B60D278BA25F0BF2FB7BB00327D3CEA1F64E9EED28DDA4E30B2F0B2EC2E6086DBC999D4AFC551FC843A00FC550997D8",
		"TxHash=C39C4CA2A77B721CFBEAFF1A3613A4F960965C4CC1E1A8B2D136E2B603F094F4 Gas=709000 FeePerGas=0.884245 Signature=7585E48755D5683E0A8F3A64DE14FFE80B2778EC5D4CBA8CFC0847AB81929D4153722C289880048DC3142E71884FE0037C78D3A2F9CD53B283F5D0E92A8666E6",
	}

	if !reflect.DeepEqual(strings, expected) {
		t.Errorf("mempool.ToStrings() expected: %+v\n result: %+v\n", expected, strings)
	}
}
